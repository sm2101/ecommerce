[{"/home/sid/Documents/projects/e-commerce-react/client/src/index.js":"1","/home/sid/Documents/projects/e-commerce-react/client/src/App.js":"2","/home/sid/Documents/projects/e-commerce-react/client/src/reportWebVitals.js":"3","/home/sid/Documents/projects/e-commerce-react/client/src/components/auth/Register.js":"4","/home/sid/Documents/projects/e-commerce-react/client/src/components/auth/Login.js":"5","/home/sid/Documents/projects/e-commerce-react/client/src/components/Landing.js":"6","/home/sid/Documents/projects/e-commerce-react/client/src/components/Nav/Navbar.js":"7","/home/sid/Documents/projects/e-commerce-react/client/src/firebase.js":"8","/home/sid/Documents/projects/e-commerce-react/client/src/Reducers/index.js":"9","/home/sid/Documents/projects/e-commerce-react/client/src/Reducers/userReducer.js":"10","/home/sid/Documents/projects/e-commerce-react/client/src/Actions/types.js":"11","/home/sid/Documents/projects/e-commerce-react/client/src/components/auth/ForgotPassword.js":"12","/home/sid/Documents/projects/e-commerce-react/client/src/components/auth/CompleteRegister.js":"13","/home/sid/Documents/projects/e-commerce-react/client/src/Functions/auth.js":"14","/home/sid/Documents/projects/e-commerce-react/client/src/components/user/History.js":"15","/home/sid/Documents/projects/e-commerce-react/client/src/components/private_routes/UserRoute.js":"16","/home/sid/Documents/projects/e-commerce-react/client/src/components/private_routes/LoadingToRedirect.js":"17","/home/sid/Documents/projects/e-commerce-react/client/src/components/Nav/UserNav.js":"18","/home/sid/Documents/projects/e-commerce-react/client/src/components/user/Password.js":"19","/home/sid/Documents/projects/e-commerce-react/client/src/components/user/Wishlist.js":"20"},{"size":915,"mtime":1609306719901,"results":"21","hashOfConfig":"22"},{"size":2295,"mtime":1609504635375,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1609046355695,"results":"24","hashOfConfig":"22"},{"size":2331,"mtime":1609501977317,"results":"25","hashOfConfig":"22"},{"size":5466,"mtime":1609493069597,"results":"26","hashOfConfig":"22"},{"size":205,"mtime":1609047796709,"results":"27","hashOfConfig":"22"},{"size":2948,"mtime":1609567823913,"results":"28","hashOfConfig":"22"},{"size":577,"mtime":1609163426155,"results":"29","hashOfConfig":"22"},{"size":151,"mtime":1609306655142,"results":"30","hashOfConfig":"22"},{"size":325,"mtime":1609306402212,"results":"31","hashOfConfig":"22"},{"size":79,"mtime":1609306394368,"results":"32","hashOfConfig":"22"},{"size":2336,"mtime":1609314740962,"results":"33","hashOfConfig":"22"},{"size":3447,"mtime":1609421749396,"results":"34","hashOfConfig":"22"},{"size":403,"mtime":1609492919889,"results":"35","hashOfConfig":"22"},{"size":259,"mtime":1609505832545,"results":"36","hashOfConfig":"22"},{"size":377,"mtime":1609499271222,"results":"37","hashOfConfig":"22"},{"size":652,"mtime":1609499302206,"results":"38","hashOfConfig":"22"},{"size":506,"mtime":1609499860101,"results":"39","hashOfConfig":"22"},{"size":2077,"mtime":1609506149820,"results":"40","hashOfConfig":"22"},{"size":262,"mtime":1609505899388,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"qcj44m",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/sid/Documents/projects/e-commerce-react/client/src/index.js",[],["92","93"],"/home/sid/Documents/projects/e-commerce-react/client/src/App.js",["94"],"import './App.css';\nimport {useEffect} from 'react';\nimport {Switch,Route} from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport CompleteRegister from './components/auth/CompleteRegister';\nimport Landing from './components/Landing';\nimport Navbar from './components/Nav/Navbar';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {auth} from './firebase';\nimport {useDispatch} from 'react-redux';\nimport {LOGGED_IN_USER} from './Actions/types'\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport {currentUser} from './Functions/auth'\nimport History from './components/user/History';\nimport Password from './components/user/Password';\nimport Wishlist from './components/user/Wishlist';\nimport UserRoute from './components/private_routes/UserRoute'\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const unSubscribe = auth.onAuthStateChanged(async (user) =>{\n      if(user){\n        const idTokenRes = await user.getIdTokenResult();\n        currentUser(idTokenRes.token).then((res)=>{\n          dispatch({\n              type:LOGGED_IN_USER,\n              payload:{\n                name:res.data.name,\n                email:res.data.email,\n                token: idTokenRes.token,\n                _id:res.data._id\n              }\n            });\n         }).catch(err =>{\n             console.log(err);\n         })\n      }\n    })\n    return () => {\n      unSubscribe()\n    }\n  }, [])\n  return (\n    <>\n    <div className=\"mx-5 my-3 my-nav\">\n    <Navbar />\n    <ToastContainer />\n    </div>\n      <Switch>\n        <Route exact path = '/' component = {Landing} />\n        <Route exact path = '/login' component = {Login} />\n        <Route exact path = '/register' component = {Register} />\n        <Route exact path = '/register/complete' component = {CompleteRegister} />\n        <Route exact path = '/forgot/password' component = {ForgotPassword} />\n        <UserRoute exact path = '/user/history' component = {History} />\n        <UserRoute exact path = '/user/wishlist' component = {Wishlist} />\n        <UserRoute exact path = '/user/password' component = {Password} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","/home/sid/Documents/projects/e-commerce-react/client/src/reportWebVitals.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/components/auth/Register.js",["95"],"import React, {useState,useEffect} from 'react'\nimport { auth} from '../../firebase';\nimport {toast} from 'react-toastify';\nimport {useSelector} from 'react-redux'\nconst Register =({history}) => {\n    const [email, setEmail] = useState(\"\"),\n    [loading, setLoading] = useState(false),\n    {user} = useSelector((state) => ({...state}));\n\n    useEffect(()=>{\n        if(user && user.token){\n            history.push('/');\n        }\n    },[user]);\n    const handleSubmit = async (e) =>{\n        setLoading(true)\n        e.preventDefault();\n        const config = {\n            url : process.env.REACT_APP_REGISTER_REDIRECT_URL,\n            handleCodeInApp : true\n        }\n        await auth.sendSignInLinkToEmail(this.state.email,config).then(() =>{\n            setLoading(false)\n            toast.success(`Email is sent to ${this.state.email}. Click the link to register`);\n            window.localStorage.setItem('registerEmail',this.state.email);\n            setEmail('');  \n        }).catch(err =>{\n            toast.error(err.message);\n        })\n    }\n        return (\n            <div className = 'container p-5 h-75'>\n                <div className=\"row justify-content-center d-flex h-100 auth-box\">\n                    <div className=\"col-4 h-100 d-flex justify-content-center auth-side\">\n                    <h1 className = \"display-1\">{loading?'Loading':'Register'}</h1>\n                    </div>\n                    <div className=\"col-8 h-100 auth-form\">\n                        <form onSubmit = {handleSubmit}>\n                            <input \n                            type = 'email' \n                            className = \"form-control\" \n                            name = 'email' \n                            value = {email} \n                            onChange = {e =>setEmail(e.target.value)}\n                            placeholder = \"Email\"\n                            autoFocus\n                            />\n                            <button\n                            type = 'submit'\n                            className = 'btn btn-primary mt-1'>\n                                Register\n                            </button>\n                        </form>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n\nexport default Register;\n","/home/sid/Documents/projects/e-commerce-react/client/src/components/auth/Login.js",["96"],"import React, {useState,useEffect} from 'react'\nimport {auth, googleAuthProvider} from '../../firebase';\nimport {toast} from 'react-toastify';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {LOGGED_IN_USER} from '../../Actions/types';\nimport {Link} from 'react-router-dom';\nimport { Button } from 'antd';\nimport { GoogleOutlined} from '@ant-design/icons';\nimport {createOrUpdateUser} from '../../Functions/auth';\n\n\nconst Login  = ( { history } ) => {\n    const [email, setEmail]       = useState(\"\"),\n          [password, setPassword] = useState(\"\"),\n          [loading, setLoading]   = useState(false),\n          {user}                  = useSelector((state) => (\n              {...state}\n          )),\n          dispatch                = useDispatch();\n\n\n    const roleBasedRedirect = (res) =>{\n            if(res.data.role === \"Admin\"){\n                history.push(\"/admin/dashboard\");\n            } else {\n                history.push('/')\n            }\n        }\n    \n    const googleLogin = async () =>{\n        \n        setLoading(true);\n\n        auth.signInWithPopup(googleAuthProvider)\n        .then(async (res)=>{\n            setLoading(false);\n\n            const {user} = res;\n            await user.getIdTokenResult()\n            .then((r)=>{\n                createOrUpdateUser(r.token)\n                .then((res)=>{\n                    dispatch({\n                        type:LOGGED_IN_USER,\n                        payload:{\n                          name:res.data.name,\n                          email:res.data.email,\n                          token: r.token,\n                          _id:res.data._id\n                        }\n                    });\n                    roleBasedRedirect(res);\n                }).catch(err =>{\n                       console.log(err);\n                })\n            })\n            \n        }).catch(err =>{\n            setLoading(false);\n            console.log(err);\n            toast.error(err.message);\n        })\n    }\n\n    // everytime component mounts\n    useEffect(()=>{\n        if(user && user.token){\n            history.push('/');\n        }\n    },[user]);\n\n    const handleSubmit = async (e) =>{ //on form submit\n        \n        e.preventDefault();\n        setLoading(true);\n       try{\n           const res       = await auth.signInWithEmailAndPassword(email, password),\n                {user}     = res,\n                idTokenRes = await user.getIdTokenResult();\n\n           createOrUpdateUser(idTokenRes.token)\n           .then((res)=>{\n               dispatch({\n                type:LOGGED_IN_USER,\n                payload:{\n                  name:res.data.name,\n                  email:res.data.email,\n                  token: idTokenRes.token,\n                  _id:res.data._id\n                }\n              });\n              roleBasedRedirect(res);\n           }).catch(err =>{\n               console.log(err);\n           })\n       }\n       catch(err){\n           console.log(err);\n           toast.error(err.message);\n           setLoading(false);\n       }\n    }\n        return (\n            <div className = 'container p-5 h-75'>\n                <div className=\"row justify-content-center d-flex h-100 auth-box\">\n                    <div className=\"col-4 h-100 d-flex justify-content-center auth-side\">\n                        <div className=\"container\">\n                            <div className=\"row m-0\">\n                            <h1 className = \"display-1 col-12 m-0\">{loading?'Loading':'Login'}</h1>\n                        <div className=\"col-12 social-auth\">\n                        <Button type=\"danger\" shape=\"circle\" icon={<GoogleOutlined />} size='large'  onClick = {googleLogin}/>\n                        </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-8 h-100 auth-form\">\n                        <form onSubmit = {handleSubmit}>\n                            <input \n                            type = 'email' \n                            className = \"form-control\" \n                            name = 'email' \n                            value = {email}\n                            onChange = {e => setEmail(e.target.value)} \n                            placeholder = \"Email\"\n                            required\n                            />\n                            <input \n                            type = 'password' \n                            className = \"form-control\" \n                            name = 'password' \n                            value = {password} \n                            onChange = {e =>setPassword(e.target.value)}\n                            placeholder = \"Password\"\n                            required\n                            />\n                            <button\n                            type = 'submit'\n                            autoFocus\n                            className = 'btn btn-primary mt-2'\n                            >\n                                Login\n                            </button>\n                            <Link \n                            to = '/forgot/password' \n                            className = \"float-end text-secondary\"\n                            >\n                                Forgot Password?\n                            </Link>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\nexport default Login;\n","/home/sid/Documents/projects/e-commerce-react/client/src/components/Landing.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/components/Nav/Navbar.js",["97"],"import React, {useState} from 'react'\nimport {Menu} from 'antd';\nimport { UserOutlined ,UserAddOutlined, ShoppingOutlined, LogoutOutlined} from '@ant-design/icons';\nimport {Link} from 'react-router-dom';\nimport firebase from 'firebase';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport { LOGOUT } from '../../Actions/types';\nconst { SubMenu } = Menu;\nconst Navbar = () => {\n  const [current, setCurrent] = useState(\"home\");\n  const dispatch = useDispatch(),\n        history = useHistory(),\n        {user} = useSelector((state)=>({...state}));\n  const handleClick = e => {\n        setCurrent(e.key)\n      };\n  const logout = () =>{\n      firebase.auth().signOut();\n      dispatch({\n        type : LOGOUT,\n        payload:null\n      });\n      history.push('/');\n    }\n        return (\n              <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\" className = \"my-nav\">\n                <Menu.Item key=\"home\">\n                <img className=\"nav-logo\" src = 'https://i.imgur.com/UxLSv9T.png'/>\n                  <span><Link to = '/'>Aura</Link></span>\n                </Menu.Item>\n                <Menu.Item key=\"about\">\n                <Link to = '/about'>About Us</Link>\n                </Menu.Item>\n                <SubMenu title=\"Shop\" icon = {<ShoppingOutlined />}>\n                  <Menu.ItemGroup title=\"Item 1\">\n                    <Menu.Item key=\"shop-item-1\">Option 1</Menu.Item>\n                    <Menu.Item key=\"shop-item-2\">Option 2</Menu.Item>\n                  </Menu.ItemGroup>\n                  <Menu.ItemGroup title=\"Item 2\">\n                    <Menu.Item key=\"shop-item-3\">Option 3</Menu.Item>\n                    <Menu.Item key=\"shop-item-4\">Option 4</Menu.Item>\n                  </Menu.ItemGroup>\n                </SubMenu>\n                {!user && (\n                  <>\n                    <Menu.Item key=\"Register\" icon = {<UserAddOutlined />} className = \"float-end\" >\n                      <Link to = '/register'>Register</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"Login\" icon = {<UserOutlined />} className = \"float-end\">\n                      <Link to = '/login'>Login</Link>\n                    </Menu.Item>\n                  </>\n                )}\n                {user && (\n                  <SubMenu title={user.name?user.name:user.email} className = \"float-end\">\n                    <Menu.Item key=\"setting:1\"><Link to ='/user/history'>History</Link></Menu.Item>\n                    <Menu.Item key=\"setting:2\"><Link to ='/user/password'>Change Password</Link></Menu.Item>\n                    <Menu.Item key=\"setting:3\"><Link to ='/user/wishlist'>Wishlist</Link></Menu.Item>\n                    <Menu.Item key=\"setting:4\" icon = {<LogoutOutlined />} onClick = {logout}>Logout</Menu.Item>\n                </SubMenu>\n                )}\n              </Menu>\n            );\n    }\n\nexport default Navbar;\n","/home/sid/Documents/projects/e-commerce-react/client/src/firebase.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/Reducers/index.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/Reducers/userReducer.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/Actions/types.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/components/auth/ForgotPassword.js",["98"],"import React, {useState,useEffect} from 'react'\nimport {auth} from '../../firebase';\nimport {toast} from 'react-toastify';\nimport {useSelector} from 'react-redux'\n\nconst ForgotPassword = ({history}) =>{\n    const [email,setEmail] = useState(''),\n          [loading,setLoading] = useState(false),\n          {user} = useSelector((state) => ({...state}));\n    \n          useEffect(()=>{\n              if(user && user.token){\n                  history.push('/');\n              }\n          },[user]);\n    const handleSubmit = async (e) =>{\n        e.preventDefault();\n        setLoading(true);\n        const config = {\n            url:process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n            handleCdeInApp:true\n        }\n        await auth.sendPasswordResetEmail(email,config).then(()=>{\n            setLoading(false)\n            toast.success(`Email has been sent to ${email}.Click it to reset your password`)\n            setEmail('');\n        }).catch(err =>{\n            setLoading(false)\n            toast.error(err.message);\n        })\n    }\n          return (\n            <div className = 'container p-5 h-75'>\n                <div className=\"row justify-content-center d-flex h-100 auth-box\">\n                    <div className=\"col-4 h-100 d-flex justify-content-center auth-side\">\n                    <h1 className = \"display-1\">{loading?'Loading':'Reset Password'}</h1>\n                    </div>\n                    <div className=\"col-8 h-100 auth-form\">\n                        <form onSubmit = {handleSubmit}>\n                            <input \n                            type = 'email' \n                            className = \"form-control\" \n                            name = 'email' \n                            value = {email} \n                            onChange = {e => setEmail(e.target.value)}\n                            placeholder = \"Email\"\n                            autoFocus\n                            />\n                            <button\n                            type = 'submit'\n                            className = 'btn btn-primary mt-1'>\n                                Reset Password\n                            </button>\n                        </form>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n}\n\nexport default ForgotPassword;","/home/sid/Documents/projects/e-commerce-react/client/src/components/auth/CompleteRegister.js",["99"],"import React, { useState, useEffect } from 'react'\nimport { auth} from '../../firebase';\nimport {toast} from 'react-toastify';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {createOrUpdateUser} from '../../Functions/auth'\nimport {LOGGED_IN_USER} from '../../Actions/types'\n\n\nconst CompleteRegister =({history})=>{\n    const [email,setEmail] = useState(''),\n          [password,setPassword] = useState(''),\n          dispatch = useDispatch(),\n          {user} = useSelector((state) => ({...state}));\n    useEffect(()=>{\n        setEmail(window.localStorage.getItem('registerEmail'))\n    },[])\n\n    const handleSubmit = async (e) =>{\n        e.preventDefault();\n        try {\n            const res = await auth.signInWithEmailLink(this.state.email,window.location.href);\n            if(res.user.emailVerified){\n                // clear local storage\n                window.localStorage.removeItem('registerEmail');\n                // get user id token\n                let user = auth.currentUser\n                await user.updatePassword(this.state.password);\n                const idTokenRes = await user.getIdTokenResult();\n                createOrUpdateUser(idTokenRes.token).then((res)=>{\n                    dispatch({\n                        type:LOGGED_IN_USER,\n                        payload:{\n                          name:res.data.name,\n                          email:res.data.email,\n                          token: idTokenRes.token,\n                          _id:res.data._id\n                        }\n                      });\n                   }).catch(err =>{\n                       console.log(err);\n                   })\n                   history.push('/');\n            }\n        } catch(err){\n            console.log(err);\n            toast.error(err.message);\n        }\n    }\n        return (\n            <div className = 'container p-5 h-75'>\n                <div className=\"row justify-content-center d-flex h-100 auth-box\">\n                    <div className=\"col-4 h-100 d-flex justify-content-center auth-side\">\n                    <h1 className = \"display-3\">Complete Registeration</h1>\n                    </div>\n                    <div className=\"col-8 h-100 auth-form\">\n                        <form onSubmit = {handleSubmit}>\n                            <input \n                            type = 'email' \n                            className = \"form-control\" \n                            name = 'email' \n                            value = {email} \n                            placeholder = \"Email\"\n                            />\n                            <input \n                            type = 'password' \n                            className = \"form-control\" \n                            name = 'password' \n                            value = {password} \n                            onChange = {(e) =>{setPassword(e.target.value)}}\n                            placeholder = \"Password\"\n                            autoFocus\n                            />\n                            <button\n                            type = 'submit'\n                            autoFocus\n                            className = 'btn btn-primary mt-1'>\n                                Register\n                            </button>\n                        </form>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\nexport default CompleteRegister;","/home/sid/Documents/projects/e-commerce-react/client/src/Functions/auth.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/components/user/History.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/components/private_routes/UserRoute.js",["100"],"import React from 'react'\nimport {Route, Link} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport LoadingToRedirect from './LoadingToRedirect'\nexport default function UserRoute({children, ...rest}) {\n    const {user} = useSelector(state =>({...state}));\n\n    return user && user.token?<Route {...rest} render = {() => children}/>:(<LoadingToRedirect/>)\n}\n","/home/sid/Documents/projects/e-commerce-react/client/src/components/private_routes/LoadingToRedirect.js",["101"],"import React,{useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nexport default function LoadingToRedirect() {\n    const [count,setCount] = useState(5);\n    const history = useHistory();\n\n    useEffect(()=>{\n\n        const interval = setInterval(()=>{\n            setCount((currentCount) => --currentCount);\n        },1000)\n\n        count === 0 && history.push('/login');\n        return()=>clearInterval(interval);\n    },[count])\n    return (\n        <div className = 'container p-5 text-center'>\n            <p>Please login to see this page</p>\n            <p>Redirecting you in {count} seconds</p>\n        </div>\n    )\n}\n","/home/sid/Documents/projects/e-commerce-react/client/src/components/Nav/UserNav.js",[],"/home/sid/Documents/projects/e-commerce-react/client/src/components/user/Password.js",["102"],"import React,{useState} from 'react'\nimport UserNav from '../Nav/UserNav';\nimport {auth} from '../../firebase';\nimport {toast} from 'react-toastify';\n\n\nconst Password =() => {\n    const [password,setPassword] = useState(''),\n          [loading, setLoading]  = useState(false);\n\n    const handleSubmit = async (e) =>{\n        setLoading(true);\n        e.preventDefault();\n        await auth.currentUser.updatePassword(password).then((res)=>{\n            setLoading(false);\n            toast.success('Password Updated');\n        }).catch(err =>{\n            setLoading(false);\n            toast.error(err.message);\n        })\n    }\n    return (\n        <div className = \"container h-75 p-5 \">\n            <div className=\"row h-100 m-0 justify-conetnt-center d-flex auth-box\">\n                        <div className=\"col-4 h-100 d-flex justify-content-center auth-side\">\n                            <h1 className = \"display-1\">{loading?'Loading':'Change Password'}</h1>\n                        </div>\n                    <div className=\"col-8 h-100 auth-form\">\n                        <form onSubmit = {handleSubmit}>\n                            <input \n                            type = 'password' \n                            className = \"form-control\" \n                            name = 'password' \n                            value = {password} \n                            onChange = {e =>setPassword(e.target.value)}\n                            placeholder = \"New Password\"\n                            autoFocus\n                            required\n                            disabled = {loading}\n                            />\n                            <button\n                            type = 'submit'\n                            className = 'btn btn-primary mt-1'\n                            disabled = {!password || loading}\n                            >\n                                Change Password\n                            </button>\n                        </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Password;","/home/sid/Documents/projects/e-commerce-react/client/src/components/user/Wishlist.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":45,"column":6,"nodeType":"109","endLine":45,"endColumn":8,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":14,"column":7,"nodeType":"109","endLine":14,"endColumn":13,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"111","line":70,"column":7,"nodeType":"109","endLine":70,"endColumn":13,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":29,"column":17,"nodeType":"116","endLine":29,"endColumn":84},{"ruleId":"107","severity":1,"message":"111","line":15,"column":13,"nodeType":"109","endLine":15,"endColumn":19,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":13,"column":12,"nodeType":"120","messageId":"121","endLine":13,"endColumn":16},{"ruleId":"118","severity":1,"message":"122","line":2,"column":16,"nodeType":"120","messageId":"121","endLine":2,"endColumn":20},{"ruleId":"107","severity":1,"message":"111","line":15,"column":7,"nodeType":"109","endLine":15,"endColumn":14,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":15},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["128"],["129"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["130"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.",["131"],"'UserNav' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"134","fix":"136"},{"desc":"134","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [dispatch]",{"range":"140","text":"141"},"Update the dependencies array to be: [history, user]",{"range":"142","text":"143"},{"range":"144","text":"143"},{"range":"145","text":"143"},"Update the dependencies array to be: [count, history]",{"range":"146","text":"147"},[1550,1552],"[dispatch]",[437,443],"[history, user]",[2123,2129],[487,493],[450,457],"[count, history]"]